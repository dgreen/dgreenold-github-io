<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Glimmer]]></title>
  <link href="https://glimmer.gwizlabs.net/atom.xml" rel="self"/>
  <link href="https://glimmer.gwizlabs.net/"/>
  <updated>2021-07-13T22:19:47-05:00</updated>
  <id>https://glimmer.gwizlabs.net/</id>
  <author>
    <name><![CDATA[David Green]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Big Sur's Finder Copy change broke my Keyboard Maestro macro]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2021/04/06/big-surs-finder-copy-change-broke-my-keyboard-maestro-macro/"/>
    <updated>2021-04-06T22:47:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2021/04/06/big-surs-finder-copy-change-broke-my-keyboard-maestro-macro</id>
    <content type="html"><![CDATA[<p>In Catalina, Copy in Finder gets the path of a file.  In Big Sur, it only gets the filename.  One can hold down ⌥+⌘+C (or ⌥ and select Copy from the Finder menu) to copy the pathname but Keyboard Maestro does not &ldquo;Copy as pathname&rdquo; as an action or option of its Copy action.</p>

<p>I had built  ⌃+⌥+⌘+U to put a URL style address of a file or folder currently select in  Finder to the clipboard.   I used to paste in file references that I could later reference as noted in a <a href="https://glimmer.gwizlabs.net/blog/2020/12/29/open-by-highlighted-url/">prior note</a> but the upgrade to Big Sur broke this.</p>

<!-- more -->


<p>I had used</p>

<p><img src="https://glimmer.gwizlabs.net/images/20210406-old-kbm.png" title="&#34;My Broken Keyboard Maestro Macro&#34;" alt="&#34;My Broken Keyboard Maestro Macro&#34;"></p>

<p>but as I note above Finder&rsquo;s interpretation of Copy has changed.</p>

<p>I could not find a Copy Pathname option in Keyboard Maestro (or anyone mentioning the change in Finder).  I tried asserting the modifier ⌥ with press and hold but it did not seem to modify the copy behavior.  I tried sending the key ⌥+⌘+C to finder but it seem to bring up Keyboard Maestro like ⌥+space does.</p>

<p><img src="https://glimmer.gwizlabs.net/images/20210406-new-kbm.png" title="&#34;My Updated Keyboard Maestro Macro&#34;" alt="&#34;My Updated Keyboard Maestro Macro&#34;"></p>

<p>This works but it does have a side affect of processing each of the selected items (with the clipboard left with the final result.  To be honest, that may have been the behavior of the old process under Catalina as a multiple selection was not tried.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dark Sky - Weather App]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2021/02/16/dark-sky-weather-app/"/>
    <updated>2021-02-16T23:40:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2021/02/16/dark-sky-weather-app</id>
    <content type="html"><![CDATA[<p>Like many, I have started looking at the additional detail on data privacy on my iOS apps.  I was shocked to see that my Weather App was tracking my Health &amp; Fitness in ddition to more reasonable information such as location.  And, it was sharing this information with other companies websites according to their self-reporting.  I decided to look for alternatives.</p>

<p>I found Dark Sky &mdash; an unusual name for a weather app but it reported only linking identifiers and location to me and not sharing that with other companies.  It had recently become an Apple app as well.</p>

<p>It, of course, was different from the App I had been using and the preinstalled Apple Weather App.  I have grown to like it over the last week as I figured how to find the things I wanted to see.</p>

<p><img class="left" src="https://glimmer.gwizlabs.net/images/20210216-darksky-main.jpeg" width="180" title="&#34;Dark Sky's Main Screen&#34;" alt="&#34;Dark Sky's Main Screen&#34;"></p>

<h2>Dark Sky&rsquo;s Main Screen</h2>

<p>The Dark Sky main screen has present temperature including &ldquo;Feels Like&rdquo; and an icon, any warnings, a small map, rain (or snow), and cloud forecast for the next several hours as a graph down the page.  At the top is the location which can be selected (as it is this example) or driven by the present location.  Hitting the magnifying glass lets one choose other locations.  Saved locations can be accessed by swiping right or left on the main screen.</p>

<div style="clear: both;"></div>


<p><img class="right" src="https://glimmer.gwizlabs.net/images/20210216-darksky-week.jpeg" width="180" title="&#34;Dark Sky's Upcoming Forecast&#34;" alt="&#34;Dark Sky's Upcoming Forecast&#34;"></p>

<h2>Dark Sky&rsquo;s Upcoming Forecast</h2>

<p>Scrolling down this screen gets you to the forecast for the next 7 days which includes the same information in a compact form.  Any of the days may be tapped to expand them to look like the present day detail.  Note towards the bottom is a &ldquo;TIME MACHINE&rdquo; link which will allow one to see forward or back in time.</p>

<div style="clear: both;"></div>


<p><img class="left" src="https://glimmer.gwizlabs.net/images/20210216-darksky-radar.jpeg" width="180" title="&#34;Dark Sky's Radar View&#34;" alt="&#34;Dark Sky's Radar View&#34;"></p>

<h2>Dark Sky&rsquo;s Radar View</h2>

<p>One can tap on the map of the main screen or on the Map at the bottom of screen to see the precipation or temperature map for the current area.  At the bottom is a player control that one see the history of the last three and a half hours and the prediction for the next half hour play out on the screen.</p>

<div style="clear: both;"></div>


<p><img class="right" src="https://glimmer.gwizlabs.net/images/20210216-darksky-world.jpeg" width="180" title="&#34;Dark Sky's Radar View (zoomed out)&#34;" alt="&#34;Dark Sky's Radar View (zoomed out)&#34;"></p>

<h2>Dark Sky&rsquo;s Radar View (zoomed out)</h2>

<p>Using the pinch (or unpinch if that is the opposite), one can adjust the zoom level of the map.  As you can see, it is possible to get a world view of the weather.  One can also drag to move what area the map is showing which turns into spinning the globe when one is at zoomed out far enough to get the world view.</p>

<div style="clear: both;"></div>


<p>All in all, it was successful migration in terms of features as well as privacy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Selection by highlighted URL]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2020/12/29/open-by-highlighted-url/"/>
    <updated>2020-12-29T11:07:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2020/12/29/open-by-highlighted-url</id>
    <content type="html"><![CDATA[<p>In Evernote 10, I have lost the ability to include general URLs as linked items.  The links already in a note still work but Evernote 10 does not allow the insertion of new links. While not perfect, Keyboard Maestro on macOS can mitigate some of the missing behavior for Mac users.</p>

<p>I chose to add a shortcut ⌃⌥⌘O (O for open) to open the highlighted text treating it as a URL.  It easily accomplished with Keyboard Maestro.</p>

<p><img src="https://glimmer.gwizlabs.net/images/kb-cntl-opt-cmd-o.png" alt="Keyboard Maestro Command" /></p>

<p>This has made things much more bearable. I still hope Evernote will reconsider their decision on URLs since I think both macOS and Windows (at least) support this type of behavior and having the URL visible in the note distracts from the readability of the note.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using localstorage between Browser Windows]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2020/12/26/using-localstorage-between-browser-windows/"/>
    <updated>2020-12-26T16:10:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2020/12/26/using-localstorage-between-browser-windows</id>
    <content type="html"><![CDATA[<h2>Overview</h2>

<p>There are several ways to communicate between browser windows</p>

<ul>
<li>Server conversation (async, network delays)</li>
<li><code>localstorage</code> (sync)</li>
<li><code>BroadcastChannel</code> (most modern, does not appear to be supported in Safari)</li>
<li><code>IndexedDB</code> (async)</li>
</ul>


<p>It looks like <code>localstorage</code> will do for the current application’s purposes of launching another window to do some work and then report back a limited amount of information and closing.</p>

<h2>Structure</h2>

<p>The remote client window uses <code>localstorage.setItem(key,value)</code> to talk back to main window.  Both <code>key</code> and <code>value</code> must be strings.  <code>JSON.stringify(object)</code> may help.</p>

<p>Main window uses <code>window.addEventListener("storage", storageEventHandler, false)</code> to register the function <code>storageEventHandler(evt)</code> to be notified when the storage is modified.  The main window can then examine <code>evt.key</code> to get the key of the item in local storage that changed and <code>evt.newValue</code> to get the new value of the changed item.  Alternately, if only one key is in involved, the main window can use <code>localStorage.getItem(key)</code>.</p>

<h2>Demo Code</h2>

<p>The demo must run in a server context not file:// and the browser windows should not be in “private” mode.</p>

<h3>Simulation of main window (launch this, then hit “read” link to launch client)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;body&gt;
</span><span class='line'>  &lt;h1&gt;Web localStorage (read)&lt;/h1&gt;
</span><span class='line'>  &lt;p&gt;&lt;a href="client.html" target="_blank"&gt;Load Client&lt;/a&gt;&lt;/p&gt;
</span><span class='line'>  &lt;h1&gt;&lt;span id='theString'&gt;&lt;/span&gt;&lt;/h1&gt;
</span><span class='line'>&lt;/body&gt;
</span><span class='line'>
</span><span class='line'>&lt;script src="scriptRead.js"&gt;&lt;/script&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Body of HTML page</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"use strict";
</span><span class='line'>
</span><span class='line'>window.addEventListener("storage", storageEventHandler, false);
</span><span class='line'>const answerFieldSpan = document.getElementById("theString");
</span><span class='line'>
</span><span class='line'>function storageEventHandler(evt) {
</span><span class='line'>  // let theString = localStorage.getItem("theString");
</span><span class='line'>  // answerFieldSpan.innerText = theString;
</span><span class='line'>
</span><span class='line'>  answerFieldSpan.innerText = `${evt.key} : ${evt.newValue}`;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>JavaScript</p>

<h3>Simulation of client window (launched by main window or manually)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;body&gt;
</span><span class='line'>  &lt;h1&gt;Graphic Page Writing Back via Local Storage&lt;/h1&gt;
</span><span class='line'>  &lt;form action=""&gt;&lt;/form&gt;
</span><span class='line'>  &lt;label for="the-string"&gt;String to store:&lt;/label&gt;
</span><span class='line'>  &lt;input type="text" name="saveValue" id="the-string"&gt;
</span><span class='line'>  &lt;button id='save'&gt;Save&lt;/button&gt;
</span><span class='line'>&lt;/body&gt;
</span><span class='line'>
</span><span class='line'>&lt;script src="scriptSet.js"&gt;&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<p>Body of HTML page</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"use strict";
</span><span class='line'>
</span><span class='line'>let theString = "stop";
</span><span class='line'>let check;
</span><span class='line'>
</span><span class='line'>const saveButton = document.getElementById("save");
</span><span class='line'>const theStringField = document.getElementById("the-string");
</span><span class='line'>
</span><span class='line'>saveButton.onclick = (ev) =&gt; {
</span><span class='line'>  theString = theStringField.value;
</span><span class='line'>  localStorage.setItem("theString", theString);
</span><span class='line'>  check = localStorage.getItem("theString");
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>JavaScript</p>

<h2>References</h2>

<ul>
<li><a href="https://html.spec.whatwg.org/multipage/webstorage.html">HTML Standard</a> (webstorage)</li>
<li><a href="https://thewebdev.info/2020/04/03/use-localstorage-to-store-data-on-the-browser/">How To Use LocalStorage to Store Data in the Browser &ndash; The Web Dev</a></li>
<li><a href="https://web.dev/storage-for-the-web/">Storage for the web</a></li>
<li><a href="https://michalzalecki.com/why-using-localStorage-directly-is-a-bad-idea/">Why using localStorage directly is a bad idea &ndash; Michal Zalecki</a></li>
<li><a href="https://jonathanmh.com/use-ios-safari-localstorage-sessionstorage-private-mode/">How to use iOS Safari localStorage and sessionStorage in Private Mode &ndash; JonathanMH</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Broadcast_Channel_API">Broadcast Channel API &ndash; Web APIs | MDN</a></li>
<li><a href="https://stackoverflow.com/questions/28230845/communication-between-tabs-or-windows">Communication between tabs or windows &ndash; Stack Overflow</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making BookMarked PDFs from Google Docs]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2020/05/25/making-bookmarked-pdfs-from-google-docs/"/>
    <updated>2020-05-25T11:28:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2020/05/25/making-bookmarked-pdfs-from-google-docs</id>
    <content type="html"><![CDATA[<p><strong>Updated:</strong> 10 June 2020 removed LibreOffice as tool, comments about Word Online</p>

<p>This post focuses on ensuring that the Table of Contents, as set up using Google Docs index, are transferred into the bookmark metadata of the PDF file. This can not be done by simplifying downloading a Google Doc as a PDF. One must export to a <code>.docx</code> file and use Word, <del>Writer,</del> or Pages to produce the PDF file using the correct options for each program.</p>

<p>Using macOS Preview as the PDF reader, we want the left sidebar when one selects Table of Contents to show the Table of Contents as bookmarks that allow quick access to the page where the content is.</p>

<p><img src="https://glimmer.gwizlabs.net/images/sidebar-toc.png" title="Preview showing sidebar with Table of Contents selected and results" alt="Choose Table of Contents in sidebar"></p>

<!--more-->


<h2>Background</h2>

<p>I have chosen Google Docs to maintain the IEEE Region 3 Operations Manual. IEEE is a GSuite organization, and I feel that using GoogleDocs had the best potential for promoting collaboration on documents. Additionally, it provides a cloud-based approach for ensuring the source content is available over time. One issue that arises from this choice is the reduced feature set in Google Docs as compared to Microsoft Word, LibreOffice Writer, and Apple Pages. Google Docs is growing to support more features over time, and the others (especially Microsoft and Apple) are trying to ensure consistent feature sets across all platforms (desktop, smartphone, web) &mdash; the gap is closing.</p>

<h2>Process that works</h2>

<p>TLDR;</p>

<blockquote><p>Google Doc → download as .docx → use word processor with bookmark/accessibility options → PDF</p></blockquote>

<p>The process that works is to download the file from Google Docs as a <code>.docx</code> file. Then using Word, Writer, or Pages open the file and then export it to PDF choosing to use the accessibility options. My computer is a MacBook Pro 13 2018 and is presently running</p>

<ul>
<li>MacOS Catalina 10.15.4</li>
<li>Microsoft Word 16.37 (from a Microsoft 365 subscription)</li>
<li>Microsoft Word365 (onlinee)</li>
<li><del>LibreOffice 6.4.4.2</del></li>
<li>Pages 10.0 (6748)</li>
</ul>


<p>The result we are seeking is to have the table of contents information inserted and maintained in Google Docs. It should not only appear in the PDF page but also appear in the metadata of the PDF file so that users can quickly jump to those sections.</p>

<p>After using the heading styles in your document to denote the structure, insert the table of contents in the appropriate part of your document using the menu option <em>Insert → Table of Contents</em>. Choose to show numbers rather than links if you wish to support printed versions of the PDF. Make sure you are adding page numbers to your page (use the menu option <em>Insert → Page Numbers</em>). The table of contents should now be visible in the document. Right-clicking on the table of contents allows you the option to refresh the table of contents after document changes. You should also be able to click on an entry and select the link to jump to that portion of the document for editing.</p>

<p>Using the menu option <em>File → Download → Microsoft Word (.docx)</em>, get a local machine copy of the document in <code>.docx</code> form. The next step is to open it in your tool of choice and create the PDF.</p>

<h3>Using Word</h3>

<p>Open the downloaded <code>.docx</code> file in Word. Choose <em>File → Save As&hellip;</em> and then select PDF as the File Format and choose to use the online service.</p>

<p><img src="https://glimmer.gwizlabs.net/images/word-pdf.png" title="'Using Word's File → SaveAs...'" ></p>

<p>Note that one can use the online version of Word also using the <em>File → Save As → Download as PDF</em> option.</p>

<h3><del>Using LibreOffice Writer</del></h3>

<blockquote><p>(removed)</p></blockquote>

<h3>Using Pages</h3>

<p>Open the downloaded <code>.docx</code> file in Pages. Choose <em>File → Export To → PDF&hellip;</em> and choose to export using the accessibility option.</p>

<p><img src="https://glimmer.gwizlabs.net/images/pages-pdf.png" title="'Using Pages's File → Export To → PDF..'" ></p>

<h2>Issues with Google Docs export</h2>

<p>The most desirable workflow is for Google Docs to add the bookmarks from the Table of Contents to the PDF file or create the document in one of the tools (Word, Writer, or Pages) that will generate the desired PDF. Alas, this is not possible today. Looking at the Google Support forums, it is clear this is a desired feature, so hopefully, it will appear one day.</p>

<p>In working towards a process to produce a PDF with bookmarks for the Table of Contents, I ran into two limitations in Google Docs. The working around the first limitation</p>

<blockquote><p><em>File → Download → PDF Document (pdf)</em>: does not include the table of contents as bookmark metadata</p></blockquote>

<p>has been the focus of this post.</p>

<p>I discovered an additional problem:</p>

<blockquote><p><em>File → Down → Open Document Format (odf)</em>: does not export a proper Table of Contents index structure</p></blockquote>

<p>This limitation (at least part of this is a bug IMO) means that the Table of Contents, made correctly in Google Docs, is not translated into Open Document Format correctly. If you try to update the index, it shows nothing. It is not surprising then that it is not available for LibreOffice Writer to export the Table of Contents information as bookmark data. LibreOffice Writer does work when using the <code>.docx</code> output file after opening and saving it in Microsoft Word but that is less useful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Limping along with Octopress and Catalina macOS]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2019/12/16/limping-along-with-octopress-and-catalina-macos/"/>
    <updated>2019-12-16T23:46:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2019/12/16/limping-along-with-octopress-and-catalina-macos</id>
    <content type="html"><![CDATA[<p>I am still using the <a href="http://octopress.org">Octopress 2 framework</a> for the website.  This has been challenging as the dependencies for old obsolete software gets harder and harder to satisfy.  However, it appears that I have succeed again for at least the Catalina release of macOS.</p>

<p>I found out I had a problem when I went to fix Disqus which had moved to <code>https://</code> protocol.  I found the files named disqus.html which had <code>http://</code> and changed it to <code>https://</code> but I was unable to regenerate the code due to a failure of the Octopress tool to run.</p>

<p>I use</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chruby ruby-2.2.10
</span></code></pre></td></tr></table></div></figure>


<p>due to the yajl-ruby which won&rsquo;t build under later rubies.</p>

<p>My already built ruby-2.2.10 would not run because the openssl 1.0 version that had been linked in had disappeared (either due to Catalina or my migration to a new MacBook Pro.)  Rebuilding ruby with</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby-install ruby-2.2.10
</span></code></pre></td></tr></table></div></figure>


<p>did not work nor did</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby-install ruby-2.2.10 -- --with-openssl-dir<span class="o">=</span>/usr/local/opt/openssl
</span></code></pre></td></tr></table></div></figure>


<p>did not work since the openssl was version 1.1.</p>

<p>After a fair bit of false steps, the successful approach was built around Chris Hobb&rsquo;s December 3, 2019 solution (for RVM) posted on <a href="https://stackoverflow.com/questions/15511943/troubles-with-rvm-and-openssl">Stack Overflow</a>.</p>

<p>First follow his steps (repeated here) to install openssl 1.0.2 by downloading openssl 1.0.2 from <a href="https://www.openssl.org/source/">https://www.openssl.org/source/</a>, and then building and installing it with</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tar -xzf openssl-1.0.2t.tar.gz
</span><span class='line'><span class="nb">cd </span>openssl-1.0.2t
</span><span class='line'>./Configure darwin64-x86_64-cc --prefix<span class="o">=</span>/usr/local/opt/openssl@1.0
</span><span class='line'>make
</span><span class='line'>make <span class="nb">test</span>
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>and then adapting to <code>chruby</code> / <code>ruby-install</code> approach, build ruby 2.2.10</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby-install ruby-2.2.10 -- --with-openssl-dir<span class="o">=</span>/usr/local/opt/openssl@1.0
</span></code></pre></td></tr></table></div></figure>


<p>Then going to the directory where I have the blog system and having previously deleted <code>Gemfile.lock</code>, I re-ran the install of gems into the <code>vendor</code> directory.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>Of course, in making this post, I issue</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle <span class="nb">exec </span>rake new_post<span class="o">[</span><span class="s2">&quot;Limping along with Octopress and Catalina macOS&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Catalina has moved to using zsh instead of bash for its default shell.  Having taken the plunge, I found out that square brackets are used differently in zsh.  I was able to escape them to continue working:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle <span class="nb">exec </span>rake new_post<span class="se">\[</span><span class="s2">&quot;Limping along with Octopress and Catalina macOS&quot;</span><span class="se">\]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thanks to <a href="http://kinopyo.com/en/blog/escape-square-bracket-by-default-in-zsh!">Qihuan Piao</a> for this hint.</p>

<h2>One less groan</h2>

<p>Evidently the version of pigments used does not know about <code>zsh</code> so the code blocks have to be marked as <code>bash</code> instead of <code>zsh</code>.</p>

<p>Time to think about a supported framework.  Perhaps a migration to the modern version of Jekyll or a broader research into other static site tools that allow markdown content.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configuring CoolBeans 2019.6]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2019/10/17/configuring-coolbeans-2019-dot-6/"/>
    <updated>2019-10-17T22:29:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2019/10/17/configuring-coolbeans-2019-dot-6</id>
    <content type="html"><![CDATA[<blockquote><p>Now CoolBeans has been renamed OpenBeans</p></blockquote>

<p>At JDK 8, JavaFX and the JDK were together, thus already configured to build applications with both.  Since that time, they were split apart (by Oracle). Different groups took over the open-source versions of each (JDK, JavaFX, and the IDE).  Each of these components needed work, which was done on different schedules, so at this point, one has to do a bit of work to set up CoolBeans (or NetBeans) for JavaFx work.  Additionally, it has become apparent that developers need to ship the JVM with their products to reduce the pain to their users.</p>

<p>This <a href="https://gist.github.com/dgreen/e1ae4636f311d38758dafdd7b0decf0f">Gist</a> discusses the approach as well as provides the files used.</p>

<p>The approach features</p>

<ul>
<li>use of modular Java</li>
<li>latest JavaFX</li>
<li>integration with CoolBeans (Run, Debug, Generate JavaDoc, Test with TestNG)</li>
<li>an image that contains everything (for the platform it was built on) to run the program</li>
</ul>


<p>Testing is configured but not demoed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Onward to Maven in Apache NetBeans]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2019/09/15/update-on-onward-to-maven/"/>
    <updated>2019-09-15T11:23:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2019/09/15/update-on-onward-to-maven</id>
    <content type="html"><![CDATA[<p>At the time of writing, <a href="https://netbeans.apache.org"><em>Apache NetBeans</em></a> is at version 11.1 and about 90% moved from Oracle to Apache.   As a project of the Apache Foundation, all source code must be licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache Foundation License</a>.  Of course, not all open source is licensed that way (and it was not the open source license used by Oracle) so there are some challenges to putting together large systems.  The <a href="https://coolbeans.xyz">CoolBeans project</a> packages NetBeans, the JDK, OpenJavaFx and other components to create an integrated product that is easier to get up and running with.  I will use NetBeans as the tool in the remainder of the post.</p>

<p>Another change made was changing the underlying preferred build automation from <a href="https://ant.apache.org">Apache Ant</a> to <a href="https://maven.apache.org">Apache Maven</a> for new projects.  This changes the file structure of the code as well as some details underneath.  NetBeans mostly allows the user to ignore this once the project is made.</p>

<p>One area that is not yet polished (IMO) is the building of a <em>jar</em> file that can be run from the command line.  The menu process &ldquo;Run &#9654; Clean and Build Main Project&rdquo; will build a <em>jar</em> file but it won&rsquo;t configure the manifest so that</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java -jar jarfile.jar</span></code></pre></td></tr></table></div></figure>


<p>works.</p>

<p>The <a href="https://www.moreofless.co.uk/executable-jar-netbeans-maven-no-main-manifest-attribute/">solution was posted by Steve Claridge</a> is to modify the POM (Project Object Model) file.  It is under the Project Files folder in the Project View in NetBeans.  Load the <code>pom.xml</code> file into the NetBeans editor.</p>

<p>Quoting from the article:</p>

<blockquote><p>You need to add the following XML snippet to your pom.xml, it can go anywhere inside the <project> element, I usually put it after the <properties> element:</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;build&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>        <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>maven-jar-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;version&gt;</span>2.4<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>            <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>                <span class="nt">&lt;archive&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;manifest&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;addClasspath&gt;</span>true<span class="nt">&lt;/addClasspath&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;mainClass&gt;</span>MAIN CLASS GOES HERE<span class="nt">&lt;/mainClass&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/manifest&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/archive&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Just replace <strong>MAIN CLASS GOES HERE</strong> with your main class (with it&rsquo;s package prefix), rebuild and your JAR is now runnable. If you are unsure what to put here, just copy the Main Class settings from the Run tab in your Netbeans Project Properties.</p></blockquote>

<p>After you do this, you can use &ldquo;Run &#9654; Clean and Build Main Project&rdquo; in NetBeans to build the <em>jar</em> file.  By changing to the Files view (instead of the Project View), you can see the target directory.</p>

<p>The name of the <em>jar</em> file will be dependent on your configuration, your project setup but in my habits project, it was <code>habits-1.0-SNAPSHOT.jar</code> which one can run from the terminal with</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>java -jar habits-1.0-SNAPSHOT.jar
</span></code></pre></td></tr></table></div></figure>


<p>assuming that Java has been set up to run at the command line (or you are using the terminal inside NetBeans.)</p>

<p><strong>Note</strong> that the target directory is erased as part of the clean process of &ldquo;Run &#9654; Clean and Build Main Project&rdquo; so you will need to close anything that has files in that space open before re-running the clean process.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Onward to Maven in Apache NetBeans]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2019/09/15/onward-to-maven/"/>
    <updated>2019-09-15T11:23:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2019/09/15/onward-to-maven</id>
    <content type="html"><![CDATA[<blockquote><p>An update to this article is <a href="https://glimmer.gwizlabs.net/blog/2021-07-13-update-on-onward-to-maven/">available</a></p></blockquote>

<p>At the time of writing, <a href="https://netbeans.apache.org"><em>Apache NetBeans</em></a> is at version 11.1 and about 90% moved from Oracle to Apache.   As a project of the Apache Foundation, all source code must be licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache Foundation License</a>.  Of course, not all open source is licensed that way (and it was not the open source license used by Oracle) so there are some challenges to putting together large systems.  The <a href="https://coolbeans.xyz">CoolBeans project</a> packages NetBeans, the JDK, OpenJavaFx and other components to create an integrated product that is easier to get up and running with.  I will use NetBeans as the tool in the remainder of the post.</p>

<p>Another change made was changing the underlying preferred build automation from <a href="https://ant.apache.org">Apache Ant</a> to <a href="https://maven.apache.org">Apache Maven</a> for new projects.  This changes the file structure of the code as well as some details underneath.  NetBeans mostly allows the user to ignore this once the project is made.</p>

<p>One area that is not yet polished (IMO) is the building of a <em>jar</em> file that can be run from the command line.  The menu process &ldquo;Run &#9654; Clean and Build Main Project&rdquo; will build a <em>jar</em> file but it won&rsquo;t configure the manifest so that</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java -jar jarfile.jar</span></code></pre></td></tr></table></div></figure>


<p>works.</p>

<p>The <a href="https://www.moreofless.co.uk/executable-jar-netbeans-maven-no-main-manifest-attribute/">solution was posted by Steve Claridge</a> is to modify the POM (Project Object Model) file.  It is under the Project Files folder in the Project View in NetBeans.  Load the <code>pom.xml</code> file into the NetBeans editor.</p>

<p>Quoting from the article:</p>

<blockquote><p>You need to add the following XML snippet to your pom.xml, it can go anywhere inside the <project> element, I usually put it after the <properties> element:</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;build&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>        <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>maven-jar-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;version&gt;</span>2.4<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>            <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>                <span class="nt">&lt;archive&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;manifest&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;addClasspath&gt;</span>true<span class="nt">&lt;/addClasspath&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;mainClass&gt;</span>MAIN CLASS GOES HERE<span class="nt">&lt;/mainClass&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/manifest&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/archive&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Just replace <strong>MAIN CLASS GOES HERE</strong> with your main class (with it&rsquo;s package prefix), rebuild and your JAR is now runnable. If you are unsure what to put here, just copy the Main Class settings from the Run tab in your Netbeans Project Properties.</p></blockquote>

<p>After you do this, you can use &ldquo;Run &#9654; Clean and Build Main Project&rdquo; in NetBeans to build the <em>jar</em> file.  By changing to the Files view (instead of the Project View), you can see the target directory.</p>

<p>The name of the <em>jar</em> file will be dependent on your configuration, your project setup but in my habits project, it was <code>habits-1.0-SNAPSHOT.jar</code> which one can run from the terminal with</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>java -jar habits-1.0-SNAPSHOT.jar
</span></code></pre></td></tr></table></div></figure>


<p>assuming that Java has been set up to run at the command line (or you are using the terminal inside NetBeans.)</p>

<p><strong>Note</strong> that the target directory is erased as part of the clean process of &ldquo;Run &#9654; Clean and Build Main Project&rdquo; so you will need to close anything that has files in that space open before re-running the clean process.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finding Java and NetBeans]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2018/11/19/finding-java-and-netbeans/"/>
    <updated>2018-11-19T23:01:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2018/11/19/finding-java-and-netbeans</id>
    <content type="html"><![CDATA[<p>Working with NetBeans 9 with an OpenJDK 10 install on a MacOS Mojave machine.</p>

<p>I teach a course EE333 where we use Java as the basis for our efforts in learning object-oriented design and programming.  We had to migrate to NetBeans 9 as NetBeans 8.2 became unworkable in some environments and unsupported.  We also went to Java 10.  First with Oracle although on November 16, 2018 they started wanting to uninstall it and have users move to Java 11 which I gather is going to have long-term support.</p>

<p>Both the Oracle code and the OpenJDK code for MacOS have a new (to me at least) structure where it has a more Mac-like file structure with a &ldquo;Contents&rdquo; folder in between the JDK-name and the &ldquo;Home&rdquo; directory.  There is also a MacOS folder and an info.plist.</p>

<p><img src="https://glimmer.gwizlabs.net/images/jdk10-dir-layout.png" alt="/Library/Java Directory with JDK 10 on MacOS" /></p>

<p>This means that the <code>JAVA_HOME</code> should be set a bit differently (to <code>/Library/Java/JavaVirtualMachines/jdk-10.0.2.jdk/Contents/Home</code>) in the ~/.bash_profile configuration file.</p>

<p>There were several errors in the Ant-based building in NetBeans 9 which essentially were stating that it was not possible to find the <code>java</code> executable and that the RT (runtime) version would be used instead.</p>

<p>In the build.xml file (on lines 120, 121, 127, 362, and 378 on the file I had), there was a path error that may either be just an error or more likely something that is not built correctly for the later JDK versions.  This removed a bunch of error messages.</p>

<p>An example (120, 121) of this in diff form (leading spaces removed) is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-  &lt;available file=&quot;${java.home}${file.separator}${file.separator}bin${file.separator}java&quot;/&gt;</span>
</span><span class='line'><span class="gd">-  &lt;available file=&quot;${java.home}${file.separator}${file.separator}bin${file.separator}java.exe&quot;/&gt;</span>
</span><span class='line'><span class="gi">+  &lt;available file=&quot;${java.home}${file.separator}..${file.separator}bin${file.separator}java&quot;/&gt;</span>
</span><span class='line'><span class="gi">+  &lt;available file=&quot;${java.home}${file.separator}..${file.separator}bin${file.separator}java.exe&quot;/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>But then, it looks like on restart, NetBeans did not like it and in nbproject/UPDATED.TXT it says</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>============================================
</span><span class='line'>Project ScheduleBuilder build script updated
</span><span class='line'>============================================
</span><span class='line'>
</span><span class='line'>Project build script file jfx-impl.xml in nbproject sub-directory has not been recognized
</span><span class='line'>as compliant with this version of NetBeans JavaFX support module. To ensure correct
</span><span class='line'>and complete functionality within this NetBeans installation the script file has been
</span><span class='line'>backed up to jfx-impl_backup.xml and then updated to the currently supported state.
</span><span class='line'>
</span><span class='line'>FX Project build script auto-update may be triggered on project open either after
</span><span class='line'>NetBeans installation update or by manual changes in jfx-impl.xml. Please note that
</span><span class='line'>changing jfx-impl.xml manually is not recommended. Any build customization code should
</span><span class='line'>be placed only in build.xml in project root directory.
</span><span class='line'>
</span><span class='line'>Remark: The auto-update mechanism can be disabled by setting property
</span><span class='line'>javafx.disable.autoupdate=true
</span><span class='line'>Automatic opening of this notification when project files are updated can be disabled by setting property
</span><span class='line'>javafx.disable.autoupdate.notification=true
</span><span class='line'>(in build.properties, private.properties or project.properties).
</span><span class='line'>
</span><span class='line'>Remark: Files nbproject/jfx-impl_backup*.xml and this file nbproject/UPDATED.TXT
</span><span class='line'>are not used when building the project and can be freely deleted.</span></code></pre></td></tr></table></div></figure>


<p>which essentially undid the changes.  Good news is that the error messages are not (yet) back.  I removed
the two files noted as removable.</p>

<p>I will try to remember to check the NetBeans 10vc3 to see if the issue still exists.</p>

<p>In the JDK11, JavaFX will be removed from the JDK and become a standalone package to maintain and install.  Both NetBeans and Java are on multi-times a year release cycle making it challenging to keep up with things for a class baseline.  Hopefully, a stability point is soon.  I know many folks are working towards this goal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Success -- hard work and-or luck?]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2018/09/29/success-hard-work-and-or-luck/"/>
    <updated>2018-09-29T09:39:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2018/09/29/success-hard-work-and-or-luck</id>
    <content type="html"><![CDATA[<p>In his article <em><a href="https://jamesclear.com/luck-vs-hard-work">Absolute Success is Luck. Relative Success is Hard Work.</a></em>, James Clear provides a pair of stories about how luck (including the circumstances one is born into) and hard work both play a role in success.  He concludes that luck controls absolute success and hard work controls relative success.</p>

<p>Later in the article, he has an engineeering/science way of conveying his idea:</p>

<blockquote><p>Imagine you can map success on a graph. Success is measured on the Y-axis. Time is measured on the X-axis. And when you are born, the ball you pluck out of Buffett&rsquo;s Ovarian Lottery determines the y-intercept. Those who are born lucky start higher on the graph. Those who are born into tougher circumstances start lower.</p>

<p>Here&rsquo;s the key: You can only control the slope of your success, not your initial position.</p></blockquote>

<p>There are more gems as well as several good stories in the article and I highly recommend you read it.</p>

<p>He closes noting that one can not control luck but can control the hard work input.  I would qualify this to note that it has to be correctly focused hard work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finding Reminders in Evernote]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2018/01/21/finding-reminders-in-evernote/"/>
    <updated>2018-01-21T11:23:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2018/01/21/finding-reminders-in-evernote</id>
    <content type="html"><![CDATA[<p>Here is a hint that I was not able to find quickly in Google nor in the EverNote help.</p>

<p>Enter &ldquo;Reminders&rdquo; into the Search Bar and then select &ldquo;Notes with Reminders&rdquo; to find all
notes that have reminders.  Very logical but took a few minutes and hopefully this
short post will same someone else a few.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NetBeans Template Configurer]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2017/12/24/netbeans-template-configurer/"/>
    <updated>2017-12-24T23:07:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2017/12/24/netbeans-template-configurer</id>
    <content type="html"><![CDATA[<p>Many years ago, I wrote a <a href="blog/2009/09/24/configuring-netbeans-to-produce-custom-documentation-header/">post</a> about how to use the NetBeans template system for
my students.  It quickly covered the basics and demonstrated how to set things up
for the course&rsquo;s documentation standard.</p>

<p>In Fall 2017, one of the <em>UAB EE333</em> Project teams built a clever tool to do
this initialization for the student.  This makes it much easier for the new
student to set up the automation at the beginning before they have any real
experience with  NetBeans.  The tool solicits the data needed (student name,
email, course) and installs the templates.</p>

<p>It has been tested on both <em>Windows 10</em> and <em>Mac OS 10.12</em> with <em>NetBeans 8.2</em> and attempts
to work with earlier and later versions of things but that is mostly outside the
testing space.  The team consisting of</p>

<ul>
<li>Dylan Dalton</li>
<li>Schauber Gbalou</li>
<li>Matthew Manuel</li>
<li>Joey Richardson</li>
<li>Darrin Wang</li>
</ul>


<p>have agreed to having the source code of their tool on GitHub under a MIT
license.  UAB students should be able to find a compiled version of the code
in the form of a <code>templates.jar</code> file in their course Learning Management
System.</p>

<p>The students cleverly put the basic templates (modified versions of the ones in
NetBeans) in the jar file as resources allowing one to modify the templates as desired but only have to distribute a jar file to new students.
We placed the code into <a href="code">Github</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java Sound Update 2]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2015/12/10/java-sound-update-2/"/>
    <updated>2015-12-10T20:22:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2015/12/10/java-sound-update-2</id>
    <content type="html"><![CDATA[<p>This is an update to a prior <a href="https://dgreenteach.org/blog/2014/10/23/java-sound-update/">article</a>.</p>

<p>UAB EE Students Andrew Peturis, Chaselyn Langley and other team members produced an interesting
GUI Application for children to associate sounds with images.  In the course of doing this, they
wished to expand the control of the audio beyond my original example.  They discovered a bit of
behavior that was not (at least clearly) documented in the JAVA API.</p>

<p>They modified the original demo substantially for their application and supplied a limited
version of it to me as an update to benefit future classes (as well as the broader Internete
Community).  I merged their two classes into one focused only on the sound system behaviour and
hopefully preserved the important behaviors they wished to document.  The new code is show below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * File: Sound.java</span>
</span><span class='line'><span class="cm"> * Authors: Andrew Peturis, Chaselyn Langley, David Green</span>
</span><span class='line'><span class="cm"> * Vers: 1.1.0 12/10/2015 dgg - update example to standalone</span>
</span><span class='line'><span class="cm"> * Vers: 1.0.0 10/20/2015 agp - initial coding</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * Credits:  Team SoundBox - EE333 Fall 2015</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.sound.sampled.AudioSystem</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.sound.sampled.Clip</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.sound.sampled.LineUnavailableException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.sound.sampled.UnsupportedAudioFileException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sound</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">sound</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Clip</span> <span class="n">clip</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">isPlaying</span><span class="o">;</span>  <span class="c1">// Sound loaded up and has started playing (may be paused)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Don&#39;t allow default constructor</span>
</span><span class='line'>    <span class="kd">private</span> <span class="nf">Sound</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Sound</span><span class="o">(</span><span class="n">String</span> <span class="n">sound</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">sound</span> <span class="o">=</span> <span class="n">sound</span><span class="o">;</span>
</span><span class='line'>        <span class="n">isPlaying</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Play a sound using javax.sound and Clip interface</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">play</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(!</span><span class="n">isPlaying</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// Create a clip to hold a sound</span>
</span><span class='line'>                <span class="n">clip</span> <span class="o">=</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">getClip</span><span class="o">();</span>
</span><span class='line'>                <span class="n">clip</span><span class="o">.</span><span class="na">open</span><span class="o">(</span><span class="n">AudioSystem</span><span class="o">.</span><span class="na">getAudioInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">sound</span><span class="o">)));</span>
</span><span class='line'>                <span class="n">isPlaying</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="c1">// Play the audio clip with the audioplayer class</span>
</span><span class='line'>            <span class="n">clip</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">LineUnavailableException</span> <span class="o">|</span> <span class="n">UnsupportedAudioFileException</span> <span class="o">|</span> <span class="n">IOException</span> <span class="n">e</span> <span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Things did not go well&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Continue a stopped sound</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">resume</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">isPlaying</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">clip</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Pause a playing sound</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">pause</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// clip.stop() will only pause the sound and still leave the sound in the line</span>
</span><span class='line'>        <span class="c1">// waiting to be continued. It does not actually clear the line so a new action could be performed.</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">isPlaying</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">clip</span><span class="o">.</span><span class="na">stop</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Stop a sound from playing and clear out the line to play another sound if need be.</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">end</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">isPlaying</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">pause</span><span class="o">();</span>
</span><span class='line'>            <span class="c1">// clip.close(); will clear out the line and allow a new sound to play. clip.flush() was not </span>
</span><span class='line'>            <span class="c1">// used because it can only flush out a line of data already performed.</span>
</span><span class='line'>            <span class="n">clip</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="n">isPlaying</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Small demo program</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Sound</span> <span class="n">sound</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sound</span><span class="o">(</span><span class="s">&quot;predator.wav&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">sound</span><span class="o">.</span><span class="na">play</span><span class="o">();</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Playing for 1 second&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>     <span class="c1">// let it play a second</span>
</span><span class='line'>            <span class="n">sound</span><span class="o">.</span><span class="na">pause</span><span class="o">();</span>          <span class="c1">// pause</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Pausing for 5 seconds&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>     <span class="c1">// continue playing</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Playing for 1 second&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">sound</span><span class="o">.</span><span class="na">resume</span><span class="o">();</span>
</span><span class='line'>            <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">1000</span><span class="o">);</span>      <span class="c1">// play have a second</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Ending, resuming which should silently fail&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">sound</span><span class="o">.</span><span class="na">end</span><span class="o">();</span>            <span class="c1">// End sound</span>
</span><span class='line'>            <span class="n">sound</span><span class="o">.</span><span class="na">resume</span><span class="o">();</span>         <span class="c1">// Should be silent</span>
</span><span class='line'>            <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>     <span class="c1">// Wait 5 seconds</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Playing again for 5 seconds&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">sound</span><span class="o">.</span><span class="na">play</span><span class="o">();</span>           <span class="c1">// Should start again</span>
</span><span class='line'>            <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>
</span><span class='line'>            <span class="n">sound</span><span class="o">.</span><span class="na">end</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span><span class="o">(</span> <span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// just fall to end</span>
</span><span class='line'>            <span class="c1">// System.exit(0);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Update February 2020</h3>

<p>Changed my web site server link.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a Line Segment Graphic]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2015/09/21/creating-a-line-segment-graphic/"/>
    <updated>2015-09-21T21:23:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2015/09/21/creating-a-line-segment-graphic</id>
    <content type="html"><![CDATA[<p>The following code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * File: CreateSimplePlot.java</span>
</span><span class='line'><span class="cm"> * Author: David Green &lt;dgreen@uab.edu&gt;</span>
</span><span class='line'><span class="cm"> * Vers: 1.1.0 09/21/2015 dgg - change from Etch-A-Sketch to Plotter</span>
</span><span class='line'><span class="cm"> * Vers: 1.0.0 09/10/2014 dgg - initial coding</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * Credits:  (if any for sections of code)</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.Color</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.image.BufferedImage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Code from:  http://www.java2s.com/Code/Java/2D-Graphics-GUI/DrawanImageandsavetopng.htm</span>
</span><span class='line'><span class="cm"> * (modifications by ...)</span>
</span><span class='line'><span class="cm"> * @author David Green &lt;dgreen@uab.edu&gt;</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CreateSimplePlot</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">static</span> <span class="kd">public</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">double</span> <span class="n">t</span><span class="o">;</span>       <span class="c1">// time</span>
</span><span class='line'>    <span class="kt">double</span> <span class="n">oldT</span><span class="o">;</span>    <span class="c1">// old time</span>
</span><span class='line'>    <span class="kt">double</span> <span class="n">deltaT</span><span class="o">;</span>  <span class="c1">// time increment</span>
</span><span class='line'>    <span class="kt">double</span> <span class="n">y</span><span class="o">;</span>       <span class="c1">// plot value</span>
</span><span class='line'>    <span class="kt">double</span> <span class="n">oldY</span><span class="o">;</span>    <span class="c1">// old plot value</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="mi">700</span><span class="o">,</span> <span class="n">height</span> <span class="o">=</span> <span class="mi">500</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// TYPE_INT_ARGB specifies the image format: 8-bit RGBA packed</span>
</span><span class='line'>      <span class="c1">// into integer pixels</span>
</span><span class='line'>      <span class="n">BufferedImage</span> <span class="n">bi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedImage</span><span class="o">(</span><span class="n">width</span><span class="o">,</span> <span class="n">height</span><span class="o">,</span> <span class="n">BufferedImage</span><span class="o">.</span><span class="na">TYPE_INT_ARGB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Graphics2D</span> <span class="n">ig2</span> <span class="o">=</span> <span class="n">bi</span><span class="o">.</span><span class="na">createGraphics</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// make full image white</span>
</span><span class='line'>      <span class="n">ig2</span><span class="o">.</span><span class="na">fillRect</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">700</span><span class="o">,</span> <span class="mi">500</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// draw black lines</span>
</span><span class='line'>      <span class="n">ig2</span><span class="o">.</span><span class="na">setPaint</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">BLACK</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">oldT</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.;</span>
</span><span class='line'>      <span class="n">oldY</span> <span class="o">=</span> <span class="n">plotFunction</span><span class="o">(</span><span class="n">oldT</span><span class="o">);</span>
</span><span class='line'>      <span class="n">deltaT</span> <span class="o">=</span> <span class="mi">5</span><span class="o">.;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">t</span> <span class="o">=</span> <span class="n">deltaT</span><span class="o">;</span> <span class="n">t</span> <span class="o">&lt;</span> <span class="mi">700</span><span class="o">.;</span> <span class="n">t</span> <span class="o">+=</span> <span class="n">deltaT</span> <span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">y</span> <span class="o">=</span> <span class="mf">250.0</span> <span class="o">+</span> <span class="mf">200.0</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">sin</span><span class="o">(</span> <span class="o">(</span><span class="n">t</span> <span class="o">/</span> <span class="mi">200</span><span class="o">.)</span> <span class="o">*</span> <span class="mi">2</span><span class="o">.</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">PI</span> <span class="o">);</span>
</span><span class='line'>        <span class="n">ig2</span><span class="o">.</span><span class="na">drawLine</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span> <span class="n">oldT</span><span class="o">,</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">oldY</span><span class="o">,</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">t</span><span class="o">,</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">y</span><span class="o">);</span>
</span><span class='line'>        <span class="n">oldY</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>
</span><span class='line'>        <span class="n">oldT</span> <span class="o">=</span> <span class="n">t</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// write the resulting file</span>
</span><span class='line'>      <span class="n">ImageIO</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">bi</span><span class="o">,</span> <span class="s">&quot;PNG&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s">&quot;plot.png&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ie</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Exception raised &quot;</span> <span class="o">+</span> <span class="n">ie</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">double</span> <span class="nf">plotFunction</span><span class="o">(</span><span class="kt">double</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mf">250.0</span> <span class="o">+</span> <span class="mf">200.0</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">sin</span><span class="o">(</span> <span class="o">(</span><span class="n">t</span> <span class="o">/</span> <span class="mi">200</span><span class="o">.)</span> <span class="o">*</span> <span class="mi">2</span><span class="o">.</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">PI</span> <span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>produces</p>

<p><img src="https://glimmer.gwizlabs.net/images/plot.png" alt="Figure 1. Sinusoid example plot" /></p>

<p>as a PNG graphic file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Software Programming Skills Popularity]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2014/11/30/software-programming-skills-popularity/"/>
    <updated>2014-11-30T20:20:00-06:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2014/11/30/software-programming-skills-popularity</id>
    <content type="html"><![CDATA[<p>There are lots of ways to evaluate popularity, and in the end, all are probably very transitory.
In his <a href="http://qz.com/298635/these-programming-languages-will-earn-you-the-most-money/">Quartz article</a>, Max Nisen examined American job data and reports the top ten slanguage/frameworks (by
salary offers) are</p>

<ol>
<li> Ruby on Rails</li>
<li> Objective C</li>
<li> Python</li>
<li> Java</li>
<li> C++</li>
<li> JavaScript</li>
<li> C</li>
<li> R</li>
<li> C#</li>
<li> Visual Basic</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java Sound Update]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2014/10/23/java-sound-update/"/>
    <updated>2014-10-23T22:24:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2014/10/23/java-sound-update</id>
    <content type="html"><![CDATA[<p>For years, I have been using (and advising the use of sun.audio) for playing sounds in the Java VM
using <a href="http://alvinalexander.com/java/java-audio-example-java-au-play-sound">Alvin Alexander&rsquo;s article</a> for inspiration.  The downside of this approach, of course,
is the dependency on classes that are not part of the JAVA API and therefore might change at anytime
although they have been relatively stable for many years.</p>

<p>Recently, I found a <a href="http://stackoverflow.com/questions/15475276/short-sound-file-plays-in-netbeans-but-not-in-jar">stackoverflow discussion</a> noting the existence of AudioSystem (and related clases).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * File: ModernRingPhone.java</span>
</span><span class='line'><span class="cm"> * Author: David Green &lt;dgreen@uab.edu&gt;</span>
</span><span class='line'><span class="cm"> * Assignment:  SoundOff - EE333 Fall 2014</span>
</span><span class='line'><span class="cm"> * Vers: 1.0.0 10/23/2014 dgg - initial coding</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * Credits:  Concepts from http://stackoverflow.com/questions/15475276/short-sound-file-plays-in-netbeans-but-not-in-jar</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.sound.sampled.AudioSystem</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.sound.sampled.Clip</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * @author David Green &lt;dgreen@uab.edu&gt;</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ModernRingPhone</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// open the sound file as a Java input stream</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">gongFile</span> <span class="o">=</span> <span class="s">&quot;telephone-ring-3.wav&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// create an audiostream from the inputstream</span>
</span><span class='line'>        <span class="n">Clip</span> <span class="n">clip</span> <span class="o">=</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">getClip</span><span class="o">();</span>
</span><span class='line'>        <span class="n">clip</span><span class="o">.</span><span class="na">open</span><span class="o">(</span><span class="n">AudioSystem</span><span class="o">.</span><span class="na">getAudioInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">gongFile</span><span class="o">)));</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// play the audio clip with the audioplayer class</span>
</span><span class='line'>        <span class="n">clip</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// wait for sound to finish before terminating program (necessary for </span>
</span><span class='line'>        <span class="c1">// running inside NetBeans, at least)</span>
</span><span class='line'>        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">10000</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">catch</span> <span class="o">(</span> <span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Things did not go well&quot;</span> <span class="o">);</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update: 2015-02-08 Removed unnecessary line of code</p>

<p>Update: 2015-12-10 Revised example is available <a href="https://glimmer.gwizlabs.net/blog/2015/12/10/java-sound-update-2/">here</a>.</p>

<p>Update 2020-02-06 Changed my web site server link.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Waiting on Migration Tools for Octopress 3]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2014/09/01/waiting-on-migration-tools-for-octopress-3/"/>
    <updated>2014-09-01T01:33:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2014/09/01/waiting-on-migration-tools-for-octopress-3</id>
    <content type="html"><![CDATA[<p>Watching the Twitter posts, it looks like a lot of work has gone
into building Octopress 3.0 around a somewhat different philosophy
than Octopress 2.0 making migration a challenge at present.</p>

<p><a href="http://justcurious.is/2014/octopress3/">Some have migrated themselves</a>, while the <a href="https://github.com/octopress/octopress/issues/30">author is discussing
a migration tool</a>.</p>

<p>I will wait a while and see what develops.  Octopress 2.0
continues to work so I can (or should) concentrate on blog content.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Updating Java/NetBeans on OS X]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2013/07/14/updating-java-slash-netbeans-on-os-x/"/>
    <updated>2013-07-14T17:41:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2013/07/14/updating-java-slash-netbeans-on-os-x</id>
    <content type="html"><![CDATA[<h2>Oracle Java on OS X</h2>

<p>After moving to Oracle&rsquo;s Java to use on OS X, one finds a new System
Preference pane which launches a Java preferences App.  Included here is a
preset option to update Java.  However, one should note that if one installed
the JDK (Java Development Kit) as opposed to the JRE (Java Run Time
environment) <strong>only</strong> the JRE portion of the package is automatically updated.
It appears one has to manually download and update the JDK to get that portion
of the package updated.  Investigating a bit, it  looks like the attention is
on the JRE and only the linkages for the Applet usage are updated
automatically.  The JDK and its command line version of java are not updated
in addition to all the other components of the JDK.  This is probably not all
bad as it means the development environment does not change on you without
notice.</p>

<h2>NetBeans on OS X</h2>

<p>To update NetBeans, download a later version, start the new version and agree
to migration from  the earlier release.  Then, when you are ready to eliminate
the old version of NetBeans, go to the /Applications/NetBeans directory and
delete only that old version.</p>

<p>Update:  25 Jan 2014 &mdash; The template directory is made when the first
template is created.  On the Mac, it is located at <code>~/Library/Application\ Support/NetBeans/7.4/config/Templates</code>
and has a <code>Classes</code> directory and a <code>Properties</code> directory.  It appears that one can move the templates
from one config directory to a new one as part of migrating.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using MySQL with Bitnami on Vagrant VM]]></title>
    <link href="https://glimmer.gwizlabs.net/blog/2013/07/08/using-mysql-with-bitnami-on-vagrant-vm/"/>
    <updated>2013-07-08T17:52:00-05:00</updated>
    <id>https://glimmer.gwizlabs.net/blog/2013/07/08/using-mysql-with-bitnami-on-vagrant-vm</id>
    <content type="html"><![CDATA[<p>The <a href="https://glimmer.gwizlabs.net/blog/2013/06/06/using-bitnamis-rubystack-on-virtualbox-linux-with-vagrant/">Bitnami install doccumented earlier</a> is a bit broken relative to MySQL.
Evidently, when Bitnami installs in the VM situation and moves itself to the <code>/opt/rubystack...</code>
directory, it expects to be a slightly more traditional install and use the userid mysql for
running the MySQL server.  However, the built databases are secured to the vagrant user account
(at least in my release).  This is relatively easy to confirm, try starting the server</p>

<pre><code> sudo ~/rubystack/ctlscript.sh start mysql
</code></pre>

<p>and not that it fails (after a bit).  One can look at the <code>mysqld.log</code> in <code>~/rubystack/mysql/data</code>
directory and see access errors.</p>

<p>The fix is to give the mysql user access to the MySQL data directory:</p>

<pre><code>cd ~/rubystack/mysql  
sudo chown -R mysql.vagrant data
</code></pre>

<p>After this is done, the startup command should work.</p>

<h2>To start MySQL</h2>

<pre><code>cd rubystack  
sudo ./ctlscript.sh start mysql
</code></pre>

<h2>To stop MySQL</h2>

<pre><code>cd rubystack  
sudo ./ctlscript.sh stop mysql
</code></pre>

<h2>Create MySQL databases for dev, test, production</h2>

<p>The following sequence setups the development, test, and production databases for the
Rails project <em>tbd4students</em>.</p>

<pre><code>tbd4students&gt; mysql -u root
CREATE DATABASE tbd4students_development DEFAULT CHARACTER SET utf8;
GRANT ALL PRIVILEGES ON tbd4students_development.* TO 'vagrant'@'localhost' IDENTIFIED BY 'password';
CREATE DATABASE tbd4students_test DEFAULT CHARACTER SET utf8;
GRANT ALL PRIVILEGES ON tbd4students_test.* TO 'vagrant'@'localhost' IDENTIFIED BY 'password';
CREATE DATABASE tbd4students_production DEFAULT CHARACTER SET utf8;
GRANT ALL PRIVILEGES ON tbd4students_production.* TO 'vagrant'@'localhost' IDENTIFIED BY 'password';
EXIT;
</code></pre>

<p>In this example, the username <code>vagrant</code> (default in the VM) with a password of
&lsquo;<code>password</code>&rsquo; is used to access the server.  There is also a presumption that
the root password to the MySQL server is blank.  This configuration, of
course, is NO security and is only useful when on a closed system.  One should
research how to configure things more  securely for anything that will be
Internet (or even LAN) visible.</p>
]]></content>
  </entry>
  
</feed>
